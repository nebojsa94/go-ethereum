steps:

  - name: "gcr.io/cloud-builders/docker"
    id: "version"
    entrypoint: "/bin/bash"
    args: [ "-c", "echo $TAG_NAME | awk -F'/' '{print $2}' > _TAG" ]

  - name: "gcr.io/cloud-builders/docker"
    id: "build"
    entrypoint: "/bin/bash"
    env:
      - '_SERVICE_DOCKER_DIR_OVERRIDE=$_SERVICE_DOCKER_DIR_OVERRIDE'
      - '_SERVICE=$_SERVICE'
    args: [ "-c", "docker build -t gcr.io/$PROJECT_ID/$_SERVICE:latest -t gcr.io/$PROJECT_ID/$_SERVICE:$(cat _TAG) -f cmd/${_SERVICE_DOCKER_DIR_OVERRIDE:-$$_SERVICE}/Dockerfile ." ]

  - name: "gcr.io/cloud-builders/docker"
    id: "publish-version"
    entrypoint: "/bin/bash"
    args: [ "-c", "docker push gcr.io/$PROJECT_ID/$_SERVICE:$(cat _TAG)" ]

  - name: "gcr.io/cloud-builders/docker"
    id: "publish-latest"
    entrypoint: "/bin/bash"
    args: [ "-c", "docker push gcr.io/$PROJECT_ID/$_SERVICE:latest" ]

  - name: "gcr.io/cloud-builders/gke-deploy"
    id: "deploy"
    entrypoint: "/bin/bash"
    args:
      - -c
      - gke-deploy
      - run
      - --filename=cmd/geth/k8s/deployment.yaml
      - --image=gcr.io/$PROJECT_ID/$_SERVICE:$(cat _TAG)
      - --location=europe-west3-a
      - --cluster=tenderly-container-cluster
